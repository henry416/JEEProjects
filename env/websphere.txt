IBM Websphere Application Servers (WAS)
---------------------------------------
	Only Support Java EE 6 so far
	
Download
--------
https://www.ibm.com/developerworks/downloads/ws/wasdevelopers/

https://www.ibmdw.net/wasdev/downloads/

Post Installation Configuration
-------------------------------
Profile Manager to create an application server profile
=>create
=>typical profile creation
=>user: admin
=>password: abc123

	App Serv Location: C:\Program Files\IBM\WebSphere\AppServer\profiles\AppSrv01
	...
	Admin console port: 9060
	Admin console secure port: 9043
	HTTP transport port: 9080
	HTTPS transport port: 9443
	Bootstrap port: 2809
	SOAP connector port: 8880
	...
	Run as Service: TRUE
	
=> set the service to manual start
	computer=>manage=>service

Admin
=====

	set PATH=%PATH%;C:\Program Files\IBM\WebSphere\AppServer\bin

	startServer server1

	stopServer server1

	http://localhost:9060/ibm/console
	
Test
----
	http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/index.jsp?topic=%2Fcom.ibm.websphere.base.doc%2Finfo%2Faes%2Fae%2Frweb_defapp.html
	
	DefaultApplication
	http://localhost:9080/snoop/
	http://localhost:9080/HelloHTML.jsp
	http://localhost:9080/HitCount.jsp
	
	http://localhost:9080/ivt/ivtserver?parm2=ivtservlet
	http://localhost:9080/ivt/ivtserver?parm2=ivtAddition.jsp
	http://localhost:9080/ivt/ivtserver?parm2=ivtejb

Document
--------
http://www.redbooks.ibm.com/redbooks/pdfs/sg248076.pdf
http://pic.dhe.ibm.com/infocenter/wasinfo/v8r5/index.jsp
	
Labs
----
	https://www.ibmdw.net/wasdev/docs/getting_started_with_the_was_liberty_profile/

mvn
===

pom.xml


PLEASE NOTE THAT WAS 8.5 DO NOT SUPPORT Java EE 1.7
PLEASE USE the following in pom.xml

	<dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
	</dependencies>
    <properties>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>
	
Optional: To integrate WAS with mvn
-----------------------------------

	<pluginRepository>
		 <id>Liberty</id>
		 <name>Liberty Repository</name>
		 <url>http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/</url>
		 <layout>default</layout>
		 <snapshots>
		 <enabled>false</enabled>
		 </snapshots>
		 <releases>
		 <enabled>true</enabled>
	 </releases>
	 </pluginRepository>


	<build>
	 <plugins>
		<!-- Enable liberty-maven-plugin -->
		<plugin>
		 <groupId>com.ibm.websphere.wlp.maven.plugins</groupId>
		 <artifactId>liberty-maven-plugin</artifactId> 
		 <version>1.0</version>
		 <!-- Specify configuration -->
		 <configuration>
			 <serverHome>/opt/IBM/wlp</serverHome> 
			 <serverName>testServer</serverName> 
		 </configuration> 
		</plugin>
	 </plugins>
	</build> 

Creating a server

	Use the following command to create a server named SERVER_NAME in the directory SERVER_HOME:
	mvn liberty:create-server -DserverHome=SERVER_HOME -DserverName=SERVER_NAME

Deploying and undeploying applications

	Use the following command to deploy an application that is in APPLICATION_FILE to the server named SERVER_NAME:
	mvn liberty:deploy -DserverName=SERVER_NAME -DserverHome=SERVER_HOME -DappArchive=APPLICATION_FILE

	The server must be started to deploy the application.
	 
	Use the following command to undeploy the same application: 
	mvn liberty:undeploy -DserverName=SERVER_NAME -DserverHome=SERVER_HOME -DappArchive=APPLICATION_NAME

	The server must be started to remove the application. In this scenario, the appArchive parameter uses the application name rather than a file path.

Starting and stopping the server

	Use the following command line to start a Liberty profile server instance:
	mvn liberty:start-server -DserverHome=SERVER_HOME -DserverName=SERVER_NAME

	Use the following command to stop a running server:
	mvn liberty:stop-server -DserverHome=SERVER_HOME -DserverName=SERVER_NAME

	Packaging and installing the server
	Use the following command line to package an existing server named SERVER_NAME in a file named ARCHIVE_FILE:
	mvn liberty:package-server -DserverName=SERVER_NAME -DserverHome=SERVER_HOME -DpackageFile=ARCHIVE_FILE

	Use the following command to install a server from an archive named 
	ARCHIVE_FILE:
	mvn liberty:install-server -DassemblyArchive=ARCHIVE_FILE

more on page 87

